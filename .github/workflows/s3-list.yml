# This is an example workflow to demonstrate the GH AWS OIDC in action
# The workflow will log in to AWS using the OIDC role name specified and then perform the requested operation on the specified AWS Service
name: s3-list

on:
  workflow_dispatch:
    inputs:
      bucket_name:
        description: 'Bucket name to list files from.'
        required: false
        type: string
      bucket_key:
        description: 'Path/Key from which files to be listed.'
        required: false
        type: string
      aws_region:
        description: 'AWS Region (S3)'
        required: true
        type: choice
        default: 'eu-west-2'
        options:
          - 'eu-west-2'
          - 'us-east-1'
      environment:
        description: 'Environment'
        required: true
        type: choice
        default: 'dev'
        options:
          - 'dev'
          - 'prod'
      oidc_session_duration:
        required: false
        type: number
        default: 3600 # 1 hour
        description: "AWS OIDC login session duration in seconds, max setting is 12 hours"

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read

jobs:
  s3-list:
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v4

        # GH actions quirk, if shared action is in a private repo then you need to check out the repo first before using the action
        # This step is only required for private repos in a user's account, if you are using it in GH Org then shared actions from private repos are directly available
      - name: check out shared workflows repository
        uses: actions/checkout@v4
        with:
          repository: rahul-patadia/shared-workflows
          token: ${{ secrets.ACTIONS_PAT }}
          path: ./.github/actions/shared-workflows

      - name: aws oidc login
        uses: ./.github/actions/shared-workflows/gh-aws-oidc
        with:
          aws_region: ${{ inputs.aws_region }}
          environment: ${{ inputs.environment }}
          oidc_role_name: 'RP-GithubCI-OIDC'
          oidc_session_duration: ${{ inputs.oidc_session_duration }}

      - name: s3 list files
        run: |
          set -x
          
          aws --version
          
          s3_bucket_name=${{ inputs.bucket_name }}
          if [[ -z "${s3_bucket_name}" ]]; then
            aws s3 ls
          else
            # else list the contents inside the bucket
            aws s3 ls s3://${s3_bucket_name}
          fi
          
          
          
          
          
